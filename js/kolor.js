// koffee 0.45.0

/*
000   000   0000000   000       0000000   00000000 
000  000   000   000  000      000   000  000   000
0000000    000   000  000      000   000  0000000  
000  000   000   000  000      000   000  000   000
000   000   0000000   0000000   0000000   000   000
 */
var B, B256, BG_COLORS, C, F256, FG_COLORS, G, M, R, W, Y, b, b_, bg, bold, c, f_, fg, g, i, init, j, k, l, len, len1, len2, len3, m, n, o, p, q, r, rawInit, reset, s, w, y;

exports.map = {
    'punct': 'w3',
    'punct this': 'b3',
    'punct comment': 'w1',
    'punct comment triple': 'w1',
    'punct regexp start': 'm8',
    'punct regexp end': 'm8',
    'punct regexp': 'm2',
    'punct regexp triple': 'm2',
    'punct semver': 'r2',
    'punct escape regexp': 'm1',
    'punct escape regexp triple': 'm1',
    'punct string single': 'g1',
    'punct string single triple': 'g1',
    'punct string double': 'g2',
    'punct string double triple': 'g2',
    'punct string interpolation start': 'g1',
    'punct string interpolation end': 'g1',
    'punct dictionary': 'y8',
    'punct property': 'y1',
    'punct range': 'b4',
    'punct method': 'r2',
    'punct function': 'r1',
    'punct function tail': ['b6', 'bold', 'B1'],
    'punct function head': ['b6', 'bold', 'B1'],
    'punct function bound tail': ['r5', 'bold', 'R1'],
    'punct function bound head': ['r5', 'bold', 'R1'],
    'punct h1': 'y1',
    'text h1': 'y4',
    'punct h2': 'r1',
    'text h2': 'r4',
    'punct h3': 'b3',
    'text h3': 'b8',
    'punct h4': 'b2',
    'text h4': 'b6',
    'punct h5': 'b1',
    'text h5': 'b5',
    'string single': 'g3',
    'string single triple': 'g3',
    'string double': 'g4',
    'string double triple': 'g4',
    'nil': 'm2',
    'obj': 'y5',
    'text': 'w8',
    'text this': 'b8',
    'text regexp': 'm6',
    'text regexp triple': 'm6',
    'require': 'w3',
    'keyword': 'b8',
    'number': 'b7',
    'number hex': 'c3',
    'number float': 'r7',
    'punct number float': 'r3',
    'semver': 'r5',
    'module this': 'y2',
    'module': 'y6',
    'class': 'y5',
    'property': 'y6',
    'dictionary key': 'y8',
    'punct function call': 'r2',
    'function call this': 'r2',
    'function call': 'r5',
    'function': 'r4',
    'method': 'r6',
    'punct bold': 'b1',
    'text bold': 'b7',
    'text code': 'b8',
    'punct code': 'b1',
    'punct code triple': 'b1',
    'punct meta': 'g1',
    'meta': 'g4',
    'comment': 'w3',
    'comment triple': 'w4',
    'comment header': ['g1', 'G1'],
    'comment triple header': ['g2', 'G2']
};

f_ = function(r, g, b) {
    return '\x1b[38;5;' + (16 + 36 * r + 6 * g + b) + 'm';
};

b_ = function(r, g, b) {
    return '\x1b[48;5;' + (16 + 36 * r + 6 * g + b) + 'm';
};

r = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f_(i, 0, 0) || f_(5, i - 5, i - 5);
};

R = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && b_(i, 0, 0) || b_(5, i - 5, i - 5);
};

g = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f_(0, i, 0) || f_(i - 5, 5, i - 5);
};

G = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && b_(0, i, 0) || b_(i - 5, 5, i - 5);
};

b = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f_(0, 0, i) || f_(i - 5, i - 5, 5);
};

B = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && b_(0, 0, i) || b_(i - 5, i - 5, 5);
};

y = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f_(i, i, 0) || f_(5, 5, i - 5);
};

Y = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && b_(i, i, 0) || b_(5, 5, i - 5);
};

m = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f_(i, 0, i) || f_(5, i - 5, 5);
};

M = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && b_(i, 0, i) || b_(5, i - 5, 5);
};

c = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && f_(0, i, i) || f_(i - 5, 5, 5);
};

C = function(i) {
    if (i == null) {
        i = 4;
    }
    return (i < 6) && b_(0, i, i) || b_(i - 5, 5, 5);
};

w = function(i) {
    if (i == null) {
        i = 4;
    }
    return '\x1b[38;5;' + (232 + (i - 1) * 3) + 'm';
};

W = function(i) {
    if (i == null) {
        i = 4;
    }
    return '\x1b[48;5;' + (232 + (i - 1) * 3 + 2) + 'm';
};

FG_COLORS = ['r', 'g', 'b', 'c', 'm', 'y', 'w'];

BG_COLORS = ['R', 'M', 'B', 'Y', 'G', 'C', 'W'];

rawInit = function(open, close, searchRegex, replaceValue) {
    return function(s) {
        return open + (~(s += "").indexOf(close, 4) && s.replace(searchRegex, replaceValue) || s) + close;
    };
};

init = function(open, close) {
    return rawInit("\x1b[" + open + "m", "\x1b[" + close + "m", new RegExp("\\x1b\\[" + close + "m", "g"), "\x1b[" + open + "m");
};

F256 = function(open) {
    return rawInit(open, "\x1b[39m", new RegExp("\\x1b\\[39m", "g"), open);
};

B256 = function(open) {
    return rawInit(open, "\x1b[49m", new RegExp("\\x1b\\[49m", "g"), open);
};

exports.bold = rawInit("\x1b[1m", "\x1b[22m", /\x1b\[22m/g, "\x1b[22m\x1b[1m");

exports.dim = rawInit("\x1b[2m", "\x1b[22m", /\x1b\[22m/g, "\x1b[22m\x1b[2m");

exports.reset = init(0, 0);

exports.italic = init(3, 23);

exports.underline = init(4, 24);

exports.inverse = init(7, 27);

exports.hidden = init(8, 28);

exports.strikethrough = init(9, 29);

exports.black = init(30, 39);

exports.red = init(31, 39);

exports.green = init(32, 39);

exports.yellow = init(33, 39);

exports.blue = init(34, 39);

exports.magenta = init(35, 39);

exports.cyan = init(36, 39);

exports.white = init(37, 39);

exports.gray = init(90, 39);

for (j = 0, len = BG_COLORS.length; j < len; j++) {
    bg = BG_COLORS[j];
    exports[bg] = eval(bg);
    for (i = k = 1; k <= 8; i = ++k) {
        exports[bg + i] = B256(exports[bg](i));
    }
}

for (l = 0, len1 = FG_COLORS.length; l < len1; l++) {
    fg = FG_COLORS[l];
    exports[fg] = eval(fg);
    for (i = n = 1; n <= 8; i = ++n) {
        exports[fg + i] = F256(exports[fg](i));
    }
}

exports.globalize = function() {
    var len2, o, results;
    results = [];
    for (o = 0, len2 = FG_COLORS.length; o < len2; o++) {
        fg = FG_COLORS[o];
        results.push((function() {
            var p, results1;
            results1 = [];
            for (i = p = 1; p <= 8; i = ++p) {
                bg = fg.toUpperCase();
                global[fg + i] = exports[fg + i];
                results1.push(global[bg + i] = exports[bg + i]);
            }
            return results1;
        })());
    }
    return results;
};

if (require.main === module) {
    reset = '\x1b[0m';
    bold = '\x1b[1m';
    for (o = 0, len2 = BG_COLORS.length; o < len2; o++) {
        bg = BG_COLORS[o];
        for (i = p = 1; p <= 8; i = ++p) {
            s = reset;
            fg = bg.toLowerCase();
            s += module.exports[fg + i]((fg + i) + " " + (bg + i) + " ");
            for (q = 0, len3 = FG_COLORS.length; q < len3; q++) {
                fg = FG_COLORS[q];
                s += module.exports[bg + i](module.exports[fg + (9 - i)](' ' + fg + ' '));
            }
            console.log(s + reset);
        }
    }
    console.log(" ");
}

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/kolor.coffee